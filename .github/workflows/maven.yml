# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Spring CI

on:
  push:
    branches:
      - main
      - newModel
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: main
        required: false


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Docker Login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          tags: |
            mattydroidx/backend-integration-project:${{ github.sha }}
            mattydroidx/backend-integration-project:latest

      - name: DEPLOY ON FIREBASE
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
